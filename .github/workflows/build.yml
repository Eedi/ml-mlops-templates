on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment_config_file:
        required: true
        type: string
      ml_env_name:
        required: true
        type: string
      ml_env_description:
        required: true
        type: string
      target_layer:
        required: true
        type: string
      tags:
        required: true
        type: string
      maximise_disk_space:
        required: true
        type: boolean

jobs:
  get-config:
      uses: Azure/mlops-templates/.github/workflows/read-yaml.yml@main
      with:
        file_name: ${{ inputs.environment_config_file }}

  build:
    needs: get-config
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    env:
      resource_group: ${{ secrets.PROJECT_RESOURCE_GROUP_NAME }}
      aml_workspace: mlw-${{ needs.get-config.outputs.namespace }}-${{ needs.get-config.outputs.postfix }}${{ needs.get-config.outputs.environment }}
      ml_env_name: ${{ inputs.ml_env_name }}
      ml_env_description: ${{ inputs.ml_env_description }}
      target_layer: ${{ inputs.target_layer }}
      tags: ${{ inputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0
      - name: Az CLI Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      - name: Free up disk space
        if: ${{ inputs.maximise_disk_space }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/conda
          sudo apt-get purge -y postgresql* || true
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          df -h
        shell: bash
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Prune local Docker cache
        if: ${{ inputs.maximise_disk_space }}
        run: docker buildx prune --force
      - name: Update azure ml environment
        run: ./.github/scripts/build_env.sh
